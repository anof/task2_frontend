{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\task2\\\\frontend\\\\gui\\\\src\\\\components\\\\content\\\\upper\\\\artists.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport './upper.css';\nimport axios from 'axios';\n\nclass Artists extends React.Component {\n  constructor() {\n    super();\n    this.classes = makeStyles(theme => ({\n      root: {\n        fontFamily: \"BebasNeueRegular\",\n        paddingTop: theme.spacing(10),\n        paddingLeft: theme.spacing(9),\n        paddingBottom: theme.spacing(15),\n        background: 'linear-gradient(to top, #000000, #2a1219, #501a28, #771f35, #a1243f, #b02740, #bf2c3f, #ce313e, #c53438, #bc3632, #b4382c, #ab3927)',\n        color: 'white'\n      },\n      row: {\n        marginTop: theme.spacing(1)\n      },\n      imgRow: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(3)\n      },\n      paper: {\n        textAlign: \"left\",\n        justifyContent: 'center' // background: 'blue'\n\n      },\n      paperContent: {\n        fontWeight: \"bold\",\n        fontSize: \"20px\"\n      },\n      leftPart: {\n        paddingTop: theme.spacing(5)\n      },\n      img: {\n        marginLeft: theme.spacing(5)\n      }\n    }));\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    axios({\n      url: 'http://localhost:8000/graphql/',\n      method: 'post',\n      data: {\n        query: \"\\n        {\\n          allArtist {\\n            name\\n          }\\n        }\\n          \"\n      }\n    }).then(response => {\n      allArtists = response.data.data.allArtist;\n      console.log(response.data.data.allArtist);\n      foreach(el => {\n        console.log(el);\n      }); //   this.setMusicData(response.data.data.allMusic[0]);\n    }).catch(error => {\n      console.log(error);\n      document.getElementById('header').innerHTML = \"Api not answering\";\n    });\n  }\n\n  setMusicData(response) {\n    let albums = response.albums.split(',');\n    let artists = response.artists.split(',');\n    let songs = response.songs.split(',');\n    let albumsElement = document.getElementById('albums');\n    let artistsElement = document.getElementById('artists');\n    let songsElement = document.getElementById('songs');\n    albums.forEach(album => {\n      let temp = document.createElement('li');\n      temp.innerHTML = \"<li>\" + album + \"</li>\";\n      albumsElement.appendChild(temp);\n    });\n    artists.forEach(artist => {\n      let temp = document.createElement('li');\n      temp.innerHTML = \"<li>\" + artist + \"</li>\";\n      artistsElement.appendChild(temp);\n    });\n    songs.forEach(song => {\n      let temp = document.createElement('li');\n      temp.innerHTML = \"<li>\" + song + \"</li>\";\n      songsElement.appendChild(temp);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Artists\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: this.classes.imgRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: this.classes.imgRow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.classes.paperImg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Artists;","map":{"version":3,"sources":["C:\\Users\\LENOVO\\Desktop\\task2\\frontend\\gui\\src\\components\\content\\upper\\artists.js"],"names":["React","makeStyles","Grid","axios","Artists","Component","constructor","classes","theme","root","fontFamily","paddingTop","spacing","paddingLeft","paddingBottom","background","color","row","marginTop","imgRow","marginLeft","paper","textAlign","justifyContent","paperContent","fontWeight","fontSize","leftPart","img","componentDidMount","getData","url","method","data","query","then","response","allArtists","allArtist","console","log","foreach","el","catch","error","document","getElementById","innerHTML","setMusicData","albums","split","artists","songs","albumsElement","artistsElement","songsElement","forEach","album","temp","createElement","appendChild","artist","song","render","paperImg"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './upper.css';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\nclass Artists extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.classes = makeStyles(theme => ({\r\n            root: {\r\n              fontFamily: \"BebasNeueRegular\",\r\n              paddingTop: theme.spacing(10),\r\n              paddingLeft: theme.spacing(9),\r\n              paddingBottom: theme.spacing(15),\r\n              background: 'linear-gradient(to top, #000000, #2a1219, #501a28, #771f35, #a1243f, #b02740, #bf2c3f, #ce313e, #c53438, #bc3632, #b4382c, #ab3927)',\r\n              color: 'white'\r\n          \r\n            },\r\n            row:{\r\n              marginTop: theme.spacing(1),\r\n            },\r\n          \r\n            imgRow:{\r\n              marginTop: theme.spacing(3),\r\n              marginLeft: theme.spacing(3),\r\n            },\r\n            paper:{\r\n              textAlign: \"left\",\r\n              justifyContent: 'center',\r\n              // background: 'blue'\r\n              \r\n          \r\n            },\r\n          \r\n            paperContent:{\r\n              fontWeight: \"bold\",\r\n              fontSize: \"20px\",\r\n            },\r\n          \r\n            leftPart:{\r\n              paddingTop: theme.spacing(5)\r\n            },\r\n          \r\n            img:{\r\n              marginLeft: theme.spacing(5)\r\n            },\r\n          }));\r\n    }\r\n    \r\n\r\n\r\n    componentDidMount() {\r\n    this.getData()\r\n  }\r\n\r\n  getData() {\r\n    axios({\r\n      url: 'http://localhost:8000/graphql/',\r\n      method: 'post',\r\n      data: {\r\n        query: `\r\n        {\r\n          allArtist {\r\n            name\r\n          }\r\n        }\r\n          `\r\n      }\r\n    }).then((response) => {\r\n\r\n        allArtists =response.data.data.allArtist \r\n        console.log(response.data.data.allArtist)\r\n\r\n        foreach(el=>{\r\n            console.log(el)\r\n        })\r\n    //   this.setMusicData(response.data.data.allMusic[0]);\r\n\r\n    }).catch((error)=>{\r\n      console.log(error)\r\n      document.getElementById('header').innerHTML=\"Api not answering\"\r\n    });\r\n  };\r\n\r\n  setMusicData(response)\r\n  {\r\n    let albums = response.albums.split(',');\r\n    let artists = response.artists.split(',');\r\n    let songs = response.songs.split(',');\r\n\r\n    let albumsElement = document.getElementById('albums');\r\n    let artistsElement = document.getElementById('artists');\r\n    let songsElement = document.getElementById('songs');\r\n\r\n\r\n    albums.forEach(album => {\r\n      let temp = document.createElement('li');\r\n      temp.innerHTML = \"<li>\" + album + \"</li>\";\r\n      albumsElement.appendChild(temp)\r\n    });\r\n\r\n\r\n    artists.forEach(artist => {\r\n      let temp = document.createElement('li');\r\n      temp.innerHTML = \"<li>\" + artist + \"</li>\";\r\n      artistsElement.appendChild(temp)\r\n    });\r\n\r\n    songs.forEach(song => {\r\n      let temp = document.createElement('li');\r\n      temp.innerHTML = \"<li>\" + song + \"</li>\";\r\n      songsElement.appendChild(temp)\r\n    });\r\n  }\r\n\r\n    render() {\r\n      return (\r\n        <div className=\"Artists\">\r\n          <Grid item xs={8}>\r\n                <Grid item xs={12} className={this.classes.imgRow}>\r\n                    <div>\r\n                        {/* <img src={Imagine} alt='Imagine Dragons' width=\"150px\" height=\"150px\" />\r\n                        <img className={this.classes.img} src={Chain} alt='Chain Smokers' width=\"150px\" height=\"150px\" />\r\n                        <img className={this.classes.img} src={Marshmello} alt='Marshmello' width=\"150px\" height=\"150px\" /> */}\r\n                    </div>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} className={this.classes.imgRow}>\r\n                    <div className={this.classes.paperImg}>\r\n                        {/* <img src={Coldplay} alt='Coldplay' width=\"150px\" height=\"150px\" />\r\n                        <img className={this.classes.img} src={Avicii} alt='Avicii RIP' width=\"150px\" height=\"150px\" />\r\n                        <img className={this.classes.img} src={OneRepublic} alt='One Republic' width=\"150px\" height=\"150px\" /> */}\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\nexport default Artists"]},"metadata":{},"sourceType":"module"}