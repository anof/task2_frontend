{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\task2\\\\frontend\\\\gui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\task2\\\\frontend\\\\gui\\\\src\\\\App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n{\\n  allArtist {\\n    name\\n  }\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport './App.css';\nimport Layout from './components/layout/layout';\nimport ApolloClient from 'apollo-boost';\nimport { gql } from \"apollo-boost\";\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { useQuery } from '@apollo/react-hooks';\nconst client = new ApolloClient({\n  uri: 'http://localhost:8000/graphql/'\n});\nconst artistsQuery = gql(_templateObject());\n\nfunction artists() {\n  // return data.rates.map(({ currency, rate }) => (\n  //   <div key={currency}>\n  //     <p>\n  //       {currency}: {rate}\n  //     </p>\n  //   </div>\n  // ));\n  console.log(data);\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"hi\");\n}\n\nclass App extends React.Component {\n  render() {\n    return React.createElement(ApolloProvider, {\n      client: client,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"useQuery\", {\n      query: artistsQuery,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, (loading, error, data) => {})));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\LENOVO\\Desktop\\task2\\frontend\\gui\\src\\App.js"],"names":["React","Layout","ApolloClient","gql","ApolloProvider","useQuery","client","uri","artistsQuery","artists","console","log","data","App","Component","render","loading","error"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAGA,MAAMC,MAAM,GAAG,IAAIJ,YAAJ,CAAiB;AAC5BK,EAAAA,GAAG,EAAE;AADuB,CAAjB,CAAf;AAKA,MAAMC,YAAY,GAAGL,GAAH,mBAAlB;;AAQA,SAASM,OAAT,GAAmB;AAGb;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAED;;AAIL,MAAMC,GAAN,SAAkBb,KAAK,CAACc,SAAxB,CAAkC;AAChCC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,cAAD;AAAgB,MAAA,MAAM,EAAET,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE;AAAU,MAAA,KAAK,EAAEE,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,CAACQ,OAAD,EAAUC,KAAV,EAAiBL,IAAjB,KAA0B,CAE3B,CAHD,CAHF,CADF,CADF;AAaD;;AAf+B;;AAkBlC,eAAeC,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Layout from './components/layout/layout'\nimport ApolloClient from 'apollo-boost';\nimport { gql } from \"apollo-boost\";\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { useQuery } from '@apollo/react-hooks';\n\n\nconst client = new ApolloClient({\n    uri: 'http://localhost:8000/graphql/',\n  });\n\n  \nconst artistsQuery = gql`\n{\n  allArtist {\n    name\n  }\n}\n`;\n\nfunction artists() {\n      \n    \n      // return data.rates.map(({ currency, rate }) => (\n      //   <div key={currency}>\n      //     <p>\n      //       {currency}: {rate}\n      //     </p>\n      //   </div>\n      // ));\n      console.log(data);\n      return <p>hi</p>\n      \n    }\n\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <div className=\"App\">  \n          {/* <Layout /> */}\n\n          <useQuery query={artistsQuery}>\n          { (loading, error, data) => {\n\n          }}\n          </useQuery>\n        </div>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}