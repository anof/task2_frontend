{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\task2\\\\frontend\\\\gui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\task2\\\\frontend\\\\gui\\\\src\\\\components\\\\content\\\\upper\\\\artists.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n{\\n  allArtist {\\n    name\\n  }\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport './upper.css';\nimport Upper from './upper';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nconst artistsQuery = gql(_templateObject());\n\nclass Artists extends React.Component {\n  constructor() {\n    super(); // this.getData();\n\n    this.artists();\n  }\n\n  artists() {\n    const _useQuery = useQuery(artistsQuery),\n          loading = _useQuery.loading,\n          error = _useQuery.error,\n          data = _useQuery.data;\n\n    if (loading) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Loading...\");\n    if (error) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Error :(\"); // return data.rates.map(({ currency, rate }) => (\n    //   <div key={currency}>\n    //     <p>\n    //       {currency}: {rate}\n    //     </p>\n    //   </div>\n    // ));\n\n    console.log(data);\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"hi\");\n  }\n\n  getData() {// axios({\n    //   url: 'http://localhost:8000/graphql/',\n    //   method: 'post',\n    //   data: {\n    //     query: `\n    //     {\n    //       allArtist {\n    //         name\n    //       }\n    //     }\n    //       `\n    //   }\n    // }).then((response) => {\n    //     let allArtists =response.data.data.allArtist \n    //     this.artist = allArtists\n    //     console.log(this.artist)\n    // }).catch((error)=>{\n    //   console.log(error)\n    // });\n  }\n\n  render() {\n    this.getData();\n    return React.createElement(Upper, {\n      props: this.artist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Artists;","map":{"version":3,"sources":["C:\\Users\\LENOVO\\Desktop\\task2\\frontend\\gui\\src\\components\\content\\upper\\artists.js"],"names":["React","Upper","useQuery","gql","artistsQuery","Artists","Component","constructor","artists","loading","error","data","console","log","getData","render","artist"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,MAAMC,YAAY,GAAGD,GAAH,mBAAlB;;AAYA,MAAME,OAAN,SAAsBL,KAAK,CAACM,SAA5B,CAAsC;AAElCC,EAAAA,WAAW,GACX;AACI,YADJ,CAEI;;AACA,SAAKC,OAAL;AACH;;AAEDA,EAAAA,OAAO,GAAG;AAAA,sBACyBN,QAAQ,CAACE,YAAD,CADjC;AAAA,UACAK,OADA,aACAA,OADA;AAAA,UACSC,KADT,aACSA,KADT;AAAA,UACgBC,IADhB,aACgBA,IADhB;;AAGR,QAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACb,QAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP,CAJH,CAMR;AACA;AACA;AACA;AACA;AACA;AACA;;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAED;;AAEHG,EAAAA,OAAO,GAAG,CACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACD;;AAGCC,EAAAA,MAAM,GAAG;AACP,SAAKD,OAAL;AACA,WACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKE,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAID;;AA3DiC;;AA+DtC,eAAeX,OAAf","sourcesContent":["import React from 'react';\r\nimport './upper.css';\r\nimport Upper from './upper';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { gql } from 'apollo-boost';\r\n\r\nconst artistsQuery = gql`\r\n{\r\n  allArtist {\r\n    name\r\n  }\r\n}\r\n`;\r\n\r\n\r\n\r\n\r\n\r\nclass Artists extends React.Component {\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        // this.getData();\r\n        this.artists()\r\n    }\r\n\r\n    artists() {\r\n      const { loading, error, data } = useQuery(artistsQuery);\r\n    \r\n      if (loading) return <p>Loading...</p>;\r\n      if (error) return <p>Error :(</p>;\r\n    \r\n      // return data.rates.map(({ currency, rate }) => (\r\n      //   <div key={currency}>\r\n      //     <p>\r\n      //       {currency}: {rate}\r\n      //     </p>\r\n      //   </div>\r\n      // ));\r\n      console.log(data);\r\n      return <p>hi</p>\r\n      \r\n    }\r\n\r\n  getData() {\r\n    // axios({\r\n    //   url: 'http://localhost:8000/graphql/',\r\n    //   method: 'post',\r\n    //   data: {\r\n    //     query: `\r\n    //     {\r\n    //       allArtist {\r\n    //         name\r\n    //       }\r\n    //     }\r\n    //       `\r\n    //   }\r\n    // }).then((response) => {\r\n\r\n    //     let allArtists =response.data.data.allArtist \r\n    //     this.artist = allArtists\r\n    //     console.log(this.artist)\r\n        \r\n\r\n    // }).catch((error)=>{\r\n    //   console.log(error)\r\n    // });\r\n  };\r\n\r\n\r\n    render() {\r\n      this.getData();\r\n      return (\r\n        <Upper props={this.artist} />\r\n\r\n      );\r\n    }\r\n  }\r\n\r\n\r\nexport default Artists"]},"metadata":{},"sourceType":"module"}