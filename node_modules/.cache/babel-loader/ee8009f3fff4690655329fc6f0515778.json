{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\task2\\\\frontend\\\\gui\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nfunction artists() {\n  const _useQuery = useQuery(artistsQuery),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Error :(\"); // return data.rates.map(({ currency, rate }) => (\n  //   <div key={currency}>\n  //     <p>\n  //       {currency}: {rate}\n  //     </p>\n  //   </div>\n  // ));\n\n  console.log(data);\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"hi\");\n}\n\nconst Index = () => React.createElement(ApolloProvider, {\n  client: client,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}));\n\nReactDOM.render(React.createElement(Index, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:\\Users\\LENOVO\\Desktop\\task2\\frontend\\gui\\src\\index.js"],"names":["React","ReactDOM","App","serviceWorker","artists","useQuery","artistsQuery","loading","error","data","console","log","Index","client","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;;AAIA,SAASC,OAAT,GAAmB;AAAA,oBACkBC,QAAQ,CAACC,YAAD,CAD1B;AAAA,QACPC,OADO,aACPA,OADO;AAAA,QACEC,KADF,aACEA,KADF;AAAA,QACSC,IADT,aACSA,IADT;;AAGf,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP,CAJI,CAMf;AACA;AACA;AACA;AACA;AACA;AACA;;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAED;;AAEH,MAAMG,KAAK,GAAG,MACZ,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADF;;AAMAZ,QAAQ,CAACa,MAAT,CAAgB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA2BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA3B,E,CAEA;AACA;AACA;;AACAb,aAAa,CAACc,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n  \n\n\nfunction artists() {\n    const { loading, error, data } = useQuery(artistsQuery);\n  \n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n  \n    // return data.rates.map(({ currency, rate }) => (\n    //   <div key={currency}>\n    //     <p>\n    //       {currency}: {rate}\n    //     </p>\n    //   </div>\n    // ));\n    console.log(data);\n    return <p>hi</p>\n    \n  }\n\nconst Index = () => (\n  <ApolloProvider client={client}>\n      <App />\n  </ApolloProvider>\n);\n\nReactDOM.render(<Index />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}