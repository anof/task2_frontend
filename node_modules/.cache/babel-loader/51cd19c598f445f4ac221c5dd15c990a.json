{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\task2\\\\frontend\\\\gui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\task2\\\\frontend\\\\gui\\\\src\\\\App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n{\\n  allArtist {\\n    name\\n  }\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport './App.css';\nimport Layout from './components/layout/layout';\nimport ApolloClient from 'apollo-boost';\nimport { gql } from \"apollo-boost\";\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { useQuery } from '@apollo/react-hooks';\nconst client = new ApolloClient({\n  uri: 'http://localhost:8000/graphql/'\n});\nconst artistsQuery = gql(_templateObject());\n\nfunction artists() {//     const { loading, error, data } = useQuery(artistsQuery);\n  //     if (loading) return <p>Loading...</p>;\n  //     if (error) return <p>Error :(</p>;\n  //     // return data.rates.map(({ currency, rate }) => (\n  //     //   <div key={currency}>\n  //     //     <p>\n  //     //       {currency}: {rate}\n  //     //     </p>\n  //     //   </div>\n  //     // ));\n  //     console.log(data);\n  //     return <p>hi</p>\n}\n\nclass App extends React.Component {\n  render() {\n    return React.createElement(ApolloProvider, {\n      client: client,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"My first Apollo app \\uD83D\\uDE80\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\LENOVO\\Desktop\\task2\\frontend\\gui\\src\\App.js"],"names":["React","Layout","ApolloClient","gql","ApolloProvider","useQuery","client","uri","artistsQuery","artists","App","Component","render"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAGA,MAAMC,MAAM,GAAG,IAAIJ,YAAJ,CAAiB;AAC5BK,EAAAA,GAAG,EAAE;AADuB,CAAjB,CAAf;AAKA,MAAMC,YAAY,GAAGL,GAAH,mBAAlB;;AAQA,SAASM,OAAT,GAAmB,CACjB;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEG;;AAIL,MAAMC,GAAN,SAAkBV,KAAK,CAACW,SAAxB,CAAkC;AAChCC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,cAAD;AAAgB,MAAA,MAAM,EAAEN,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAHF,CADF,CADF;AASD;;AAX+B;;AAclC,eAAeI,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Layout from './components/layout/layout'\nimport ApolloClient from 'apollo-boost';\nimport { gql } from \"apollo-boost\";\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { useQuery } from '@apollo/react-hooks';\n\n\nconst client = new ApolloClient({\n    uri: 'http://localhost:8000/graphql/',\n  });\n\n  \nconst artistsQuery = gql`\n{\n  allArtist {\n    name\n  }\n}\n`;\n\nfunction artists() {\n  //     const { loading, error, data } = useQuery(artistsQuery);\n    \n  //     if (loading) return <p>Loading...</p>;\n  //     if (error) return <p>Error :(</p>;\n    \n  //     // return data.rates.map(({ currency, rate }) => (\n  //     //   <div key={currency}>\n  //     //     <p>\n  //     //       {currency}: {rate}\n  //     //     </p>\n  //     //   </div>\n  //     // ));\n  //     console.log(data);\n  //     return <p>hi</p>\n      \n    }\n\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <div className=\"App\">  \n          {/* <Layout /> */}\n\n          <h2>My first Apollo app ðŸš€</h2>\n        </div>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}