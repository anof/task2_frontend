{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\task2\\\\frontend\\\\gui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\task2\\\\frontend\\\\gui\\\\src\\\\App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n{\\n  allArtist {\\n    name\\n  }\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport './App.css';\nimport Layout from './components/layout/layout';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { Query } from 'react-apollo';\nimport { gql } from 'apollo-boost';\nconst client = new ApolloClient({\n  uri: 'http://localhost:8000/graphql/'\n});\nconst query = gql(_templateObject());\n\nclass App extends React.Component {\n  render() {\n    return React.createElement(ApolloProvider, {\n      client: client,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Query, {\n      query: query,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, console.log(\"hi\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\LENOVO\\Desktop\\task2\\frontend\\gui\\src\\App.js"],"names":["React","Layout","ApolloClient","ApolloProvider","Query","gql","client","uri","query","App","Component","render","console","log"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,cAApB;AAGA,MAAMC,MAAM,GAAG,IAAIJ,YAAJ,CAAiB;AAC5BK,EAAAA,GAAG,EAAE;AADuB,CAAjB,CAAf;AAKA,MAAMC,KAAK,GAAGH,GAAH,mBAAX;;AAUA,MAAMI,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAChCC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,cAAD;AAAgB,MAAA,MAAM,EAAEL,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEE,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEEI,OAAO,CAACC,GAAR,CAAY,IAAZ,CAFF,CAHF,CADF,CADF;AAaD;;AAf+B;;AAkBlC,eAAeJ,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Layout from './components/layout/layout'\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo'\nimport { Query } from 'react-apollo'\nimport { gql } from 'apollo-boost'\n\n\nconst client = new ApolloClient({\n    uri: 'http://localhost:8000/graphql/',\n  });\n\n  \nconst query = gql`\n{\n  allArtist {\n    name\n  }\n}\n`;\n\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <div className=\"App\">  \n          {/* <Layout /> */}\n\n          <Query query={query}>\n          {\n            console.log(\"hi\")\n          }\n          </Query>\n        </div>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}